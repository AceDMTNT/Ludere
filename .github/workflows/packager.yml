name: Packager

on:
  workflow_dispatch:
    inputs:
      romUrl:
        description: 'ROM direct URL'
      romId:
        description: 'ROM Identifier (no spaces)'
      romName:
        description: 'ROM Pretty name'
      romCore:
        description: 'ROM LibRetro core (excluding _libretro_android.so)'
      romAudio:
        description: 'ROM Audio Support (true/false)'
      romForegroundColor:
        description: 'Icon foreground hex color'
      romBackgroundColor:
        description: 'Icon background hex color'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Fetch Submodules
        run: git submodule update --recursive --init
      
      - name: Install NDK
        run: echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;21.0.6113669" --sdk_root=${ANDROID_SDK_ROOT}

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Fetch ROM
        run: |
          mkdir -p app/src/main/res/raw
          curl -L# "${{ github.event.inputs.romUrl }}" > app/src/main/res/raw/rom
      
      - name: Build Release APK
        run: |
          chmod +x ./gradlew
          ./gradlew -PromId="${{ github.event.inputs.romId }}" \
                    -PromName="${{ github.event.inputs.romName }}" \
                    -PromCore="${{ github.event.inputs.romCore }}" \
                    -PromAudio="${{ github.event.inputs.romAudio }}" \
                    -PromForegroundColor="${{ github.event.inputs.romForegroundColor }}" \
                    -PromBackgroundColor="${{ github.event.inputs.romBackgroundColor }}" \
                     assembleRelease
       
      - name: Sign APK
        run: |
          yes | keytool -genkey -noprompt -keystore keystore.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key0 -keypass password -storepass password
          ${ANDROID_SDK_ROOT}/build-tools/*/zipalign -v -p 4 ./app/build/outputs/apk/release/app-release-unsigned.apk ./app/build/outputs/apk/release/app-release-unsigned-aligned.apk
          ${ANDROID_SDK_ROOT}/build-tools/*/apksigner sign --ks keystore.jks --out ./app/build/outputs/apk/release/app-release-signed.apk ./app/build/outputs/apk/release/app-release-unsigned-aligned.apk

          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.romId }}
          release_name: ${{ github.event.inputs.romName }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/release/app-release-signed.apk
          asset_name: ${{ github.event.inputs.romId }}.apk
          asset_content_type: application/apk
