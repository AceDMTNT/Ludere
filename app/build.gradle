apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

ext.rom = new Properties()
file("${rootProject.projectDir}/rom.properties").withInputStream { ext.rom.load(it) }

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.draco.libretrowrapper.${rom.id}"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        manifestPlaceholders = [orientation:rom.orientation]
    }

    signingConfigs {
        release {
            storeFile file("${rootProject.projectDir}/libretrowrapper.jks")
            storePassword 'libretrowrapper'
            keyAlias 'key0'
            keyPassword 'libretrowrapper'
        }
    }

    buildTypes {
        all {
            resValue('string', 'config_rom_file', rom.romFile)
            resValue('string', 'config_name', rom.name)

            resValue('string', 'config_core', rom.core)

            resValue('color', 'config_foreground_color', rom.foregroundColor)
            resValue('color', 'config_background_color', rom.backgroundColor)

            resValue('string', 'config_variables', rom.variables)

            resValue('bool', 'config_gamepad_visible', rom.gamePadVisible)

            resValue('bool', 'config_gamepad_haptic', rom.gamePadHaptic)

            resValue('color', 'config_gamepad_icon_color', rom.gamePadIconColor)
            resValue('color', 'config_gamepad_button_color', rom.gamePadButtonColor)
            resValue('color', 'config_gamepad_pressed_color', rom.gamePadPressedColor)

            resValue('bool', 'config_gamepad_a', rom.gamePadA)
            resValue('bool', 'config_gamepad_b', rom.gamePadB)
            resValue('bool', 'config_gamepad_x', rom.gamePadX)
            resValue('bool', 'config_gamepad_y', rom.gamePadY)
            resValue('bool', 'config_gamepad_start', rom.gamePadStart)
            resValue('bool', 'config_gamepad_select', rom.gamePadSelect)
            resValue('bool', 'config_gamepad_l1', rom.gamePadL1)
            resValue('bool', 'config_gamepad_l2', rom.gamePadL2)
            resValue('bool', 'config_gamepad_r1', rom.gamePadR1)
            resValue('bool', 'config_gamepad_r2', rom.gamePadR2)
            resValue('bool', 'config_gamepad_save_state', rom.gamePadSaveState)
            resValue('bool', 'config_gamepad_load_state', rom.gamePadLoadState)
            resValue('bool', 'config_gamepad_analog_left', rom.gamePadAnalogLeft)
            resValue('bool', 'config_gamepad_analog_right', rom.gamePadAnalogRight)
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    preBuild.dependsOn 'cleanAssets'
    preBuild.dependsOn 'packageAssets'
}

task cleanAssets(type: Delete) {
    def assets = file('src/main/assets/').listFiles()
    if (assets != null)
        delete assets
}

task packageAssets(type: Tar) {
    from "${rootProject.projectDir}/system/"
    include '**'
    archiveName 'system.bin'
    compression(Compression.GZIP)
    destinationDir(file('src/main/assets/'))
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'org.apache.commons:commons-compress:1.12'
    implementation 'com.github.swordfish90:radialgamepad:0.1.0'
    implementation 'com.github.swordfish90:libretrodroid:0.4.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
}